name: Security Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run security checks daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read
  issues: write
  pull-requests: write
  security-events: write

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          # Run npm audit and capture output
          npm audit --audit-level=moderate --json > audit-results.json || true
          
          # Display human-readable results
          echo "=== NPM Security Audit Results ==="
          npm audit --audit-level=moderate || true
          
          # Check if there are any vulnerabilities
          VULN_COUNT=$(cat audit-results.json | jq -r '.metadata.vulnerabilities.total // 0')
          echo "Total vulnerabilities found: $VULN_COUNT"
          
          # Fail if high or critical vulnerabilities are found
          HIGH_VULN=$(cat audit-results.json | jq -r '.metadata.vulnerabilities.high // 0')
          CRITICAL_VULN=$(cat audit-results.json | jq -r '.metadata.vulnerabilities.critical // 0')
          
          if [ "$HIGH_VULN" -gt 0 ] || [ "$CRITICAL_VULN" -gt 0 ]; then
            echo "‚ùå High or critical vulnerabilities found!"
            echo "High: $HIGH_VULN, Critical: $CRITICAL_VULN"
            exit 1
          else
            echo "‚úÖ No high or critical vulnerabilities found"
          fi

      - name: Upload audit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-results
          path: audit-results.json
          retention-days: 30

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          # Fail on any vulnerabilities
          fail-on-severity: moderate
          # Allow licenses (customize as needed)
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC

  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          # Auto-build for JavaScript/TypeScript
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [security-audit, codeql-analysis]
    if: always()
    
    steps:
      - name: Security Check Summary
        run: |
          echo "=== Security Checks Summary ==="
          echo "Security Audit: ${{ needs.security-audit.result }}"
          echo "CodeQL Analysis: ${{ needs.codeql-analysis.result }}"
          
          if [[ "${{ needs.security-audit.result }}" == "failure" ]] || [[ "${{ needs.codeql-analysis.result }}" == "failure" ]]; then
            echo "‚ùå One or more security checks failed"
            exit 1
          else
            echo "‚úÖ All security checks passed"
          fi

      - name: Comment on PR with security status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const auditResult = '${{ needs.security-audit.result }}';
            const codeqlResult = '${{ needs.codeql-analysis.result }}';
            
            let message = '## üîí Security Checks Summary\n\n';
            message += `- **Security Audit**: ${auditResult === 'success' ? '‚úÖ Passed' : '‚ùå Failed'}\n`;
            message += `- **CodeQL Analysis**: ${codeqlResult === 'success' ? '‚úÖ Passed' : '‚ùå Failed'}\n\n`;
            
            if (auditResult === 'success' && codeqlResult === 'success') {
              message += 'üéâ All security checks passed! This PR is ready for review.';
            } else {
              message += '‚ö†Ô∏è Some security checks failed. Please review the workflow logs and address any issues.';
            }
            
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: message
            });